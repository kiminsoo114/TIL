StringBuffer

String은 고정된 길이의 불변의 문자열이다.
불변이므로 String 객체를 변경시 실제로 변경되는 것은 새로운 String 객체를 생성하는 것이다.
그러나 StringBuffer은 변경이 가능하다.
즉, String처럼 새로운 객체를 생성하는 것이 아니라 그 객체 자체가 변경된다는 의미이다.

그러므로 문자열의 변경이 잦은 작업이면 String보다는 StringBuffer를 사용하는 것이 맞다.

1. StringBuffer의 기본 생성자
StringBuffer sb = new StringBuffer();

2. int size 값을 인자로 하는 생성자
StringBuffer sb = new StringBuffer(20);

3. Strig문자열을 인자로 하는 생성자 
StringBuffer sb = new StringBuffer("INSOO");

이를 알아본 이유는 코딩테스트 중에 문자열을 Reverse한 문제 때문에 알아보게 되었다.

문제는 주어지는 문자열을 역전시켜보라는 문제였다.

String my_string = 주어진 문자열

나는 
class Solution {
    public String solution(String my_string) {
    StringBuffer sb = new StringBuffer(my_string);
        return sb.reverse().toString();   
    }
}
이런식으로 풀어냈지만 다른 분들의 코드를 확인하니 append()를 사용하셨었다.

class Solution {
    public String solution(String my_string) {
    StringBuffer sb = new StringBuffer();
        sb.append(my_string);
        return sb.reverse().toString();   
    }
}

append는 문자열을 계속 추가해줄 때 사용하는 함수로 사용가능하다.
추가로 원하는 자리에 넣고 싶을때는 insert()함수를 사용하면 된다.
